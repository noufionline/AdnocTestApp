@{
    ViewData["Title"] = "Home Page";
}
@model List<Department>

<form id="createForm">
    <input type="hidden" id="Id" name="Id" />
    <div class="form-group mb-3">
        <label class="mb-3">Name:</label>
        <input type="text" id="Name" name="Name" class="form-control mb-3" required />
    </div>
    <div class="form-group mb-3">
        <label class="mb-3">Location:</label>
        <input type="text" id="Location" name="Location" class="form-control mb-3" required />
    </div>
    <div class="mb-3">
        <button type="submit" id="submitBtn" class="btn btn-primary">Create</button>
        <button type="button" id="cancelBtn" class="btn btn-secondary ms-2 d-none">Cancel</button>
    </div>
</form>
<div class="row mb-3">
    <div class="col d-flex justify-content-end">
        <div class="input-group w-auto">
            <input type="text" id="filterInput" class="form-control" placeholder="Filter by name..." />
            <span class="input-group-text">
                <i class="bi bi-search"></i>
            </span>
        </div>
    </div>
</div>
<table class="table table-bordered" id="departmentsTable">
    <thead>
        <tr>
            <th>Name</th>
            <th>Location</th>
            <th style="width:100px;">Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var dept in Model)
        {
            <tr data-id="@dept.Id">
                <td>@dept.Name</td>
                <td>@dept.Location</td>
                <td class="btn-group" role="group">
                    <button type="button" class="btn btn-sm btn-warning editBtn">Edit</button>
                    <button type="button" class="btn btn-sm btn-danger deleteBtn ms-1">Delete</button>
                </td>
            </tr>
        }
    </tbody>
</table>

@section Scripts {
    <script>

          let isEditMode =false;

          $("#createForm").on('submit',function(e){
              e.preventDefault();

              var department = {
                  name : $("#Name").val(),
                  location : $("#Location").val()
              };

              if($("#Id").val()){
                  department.id= $("#Id").val();
              }

              var $btn = $(this).find('button[type=submit]').prop('disabled',true);

             if(!isEditMode){
                  $.ajax({
                  url:'@Url.Action("CreateDepartment", "Home")',
                  type:'POST',
                  data: JSON.stringify(department),
                  contentType: 'application/json'

              }).done(function(response){
                  var data = response.data;
                         $('#departmentsTable tbody').append(`
            <tr data-id="${data.id}">
                <td>${data.name}</td>
                <td>${data.location}</td>
                <td>
                    <div class="btn-group" role="group">
                        <button type="button" class="btn btn-sm btn-warning editBtn">Edit</button>
                        <button type="button" class="btn btn-sm btn-danger deleteBtn ms-1">Delete</button>
                    </div>
                </td>
            </tr>
        `);
                  $('#createForm')[0].reset();
                  $('#name').focus();
              }
              ).fail(function(xhr,status){
                  var message = (xhr.responseJSON && xhr.responseJSON.message) || "Something went wrong!!!!";
                  alert(message);
              })
             .always(function(){
                  $btn.prop('disabled',false);
              });
             }
             else{
                 $.ajax({
                      url:'@Url.Action("UpdateDepartment", "Home")',
                      type:'POST',
                      data: JSON.stringify(department),
                      contentType: 'application/json'
                 }).done(function(response){
                      if(response.success){
                          let row=$(`#departmentsTable tbody tr[data-id="${response.data.id}"]`);
                          row.find("td:eq(0)").text(response.data.name);
                          row.find("td:eq(1)").text(response.data.location);
                          resetForm();
                      } else {
                          alert("Error: " + (response.message || response.errors.join(", ")));
                      }
                 }).fail(function(xhr,status){
                    var message = (xhr.responseJSON && xhr.responseJSON.message) || "Something went wrong!!!!";
                    alert(message);
                 }).always(function(){
                     $btn.prop('disabled',false);
                 });
             }


          });

        $(document).on("click",".editBtn",function(){
            let row = $(this).closest("tr");
            let id=row.data("id");
            let name = row.find("td:eq(0)").text();
            let location = row.find("td:eq(1)").text();

            $("#Id").val(id);
            $("#Name").val(name);
            $("#Location").val(location);

            isEditMode = true;

            $("#submitBtn").text("Update");
            $("#cancelBtn").removeClass("d-none");

        });


         $(document).on("click", ".deleteBtn", function () {
            let row = $(this).closest("tr");
            let id = row.data("id");

            // Confirmation dialog
            if (!confirm("Are you sure you want to delete this department?")) {
                return;
            }

            $.ajax({
                url: '@Url.Action("DeleteDepartment", "Home")',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(id),
                success: function (response) {
                    if (response.success) {
                        // Remove row from table
                        row.remove();
                    } else {
                        alert("Error: " + response.message);
                    }
                },
                error: function () {
                    alert("Something went wrong while deleting.");
                }
            });
        });

        $("#cancelBtn").click(function(){
            resetForm();
        });

          function resetForm(){
              $('#createForm')[0].reset();
              $('#Id').val("");
              isEditMode = false;
              $('#submitBtn').text("Create");
              $('#cancelBtn').addClass("d-none");
              $("#Name").focus();
          }

          $("#filterInput").on("keyup", function () {
              var value = $(this).val().toLowerCase();

              $("#departmentsTable tbody tr").filter(function () {
                  var name = $(this).find("td:first").text().toLowerCase();
                  $(this).toggle(name.includes(value));
              });
          });


    </script>
}